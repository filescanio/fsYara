rule Cobaltbaltstrike_RAW_Payload_dns_stager_x86 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "817c4a72-7be1-5a58-987d-fe203d7778ea"

	strings:
		$h01 = { FC E8 89 00 00 00 60 89 E5 31 D2 64 8B 52 30 8B 52 0C 8B 52 14 8B 72 28 }

	condition:
		uint32( @h01 + 0x00a3 ) == 0xe553a458 and uint32( @h01 + 0x00bd ) == 0x0726774c and uint32( @h01 + 0x012f ) == 0xc99cc96a and uint32( @h01 + 0x0198 ) == 0x56a2b5f0 and uint32( @h01 + 0x01a4 ) == 0xe035f044 and uint32( @h01 + 0x01e4 ) == 0xcc8e00f4
}

rule Cobaltbaltstrike_RAW_Payload_smb_stager_x86 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "29911a14-08ea-54de-9c07-630c6516bd49"

	strings:
		$h01 = { FC E8 89 00 00 00 60 89 E5 31 D2 64 8B 52 30 8B 52 0C 8B 52 14 8B 72 28 }

	condition:
		uint32( @h01 + 0x00a1 ) == 0xe553a458 and uint32( @h01 + 0x00c4 ) == 0xd4df7045 and uint32( @h01 + 0x00d2 ) == 0xe27d6f28 and uint32( @h01 + 0x00f8 ) == 0xbb5f9ead and uint32( @h01 + 0x010d ) == 0xbb5f9ead and uint32( @h01 + 0x0131 ) == 0xfcddfac0 and uint32( @h01 + 0x0139 ) == 0x528796c6 and uint32( @h01 + 0x014b ) == 0x56a2b5f0
}

rule Cobaltbaltstrike_RAW_Payload_TCP_Bind_x86 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "ec0a9e27-3650-5393-a93b-2a461b9a0e29"

	strings:
		$h01 = { FC E8 89 00 00 00 60 89 E5 31 D2 64 8B 52 30 8B 52 0C 8B 52 14 8B 72 28 }

	condition:
		uint32( @h01 + 0x009c ) == 0x0726774c and uint32( @h01 + 0x00ac ) == 0x006b8029 and uint32( @h01 + 0x00bb ) == 0xe0df0fea and uint32( @h01 + 0x00d5 ) == 0x6737dbc2 and uint32( @h01 + 0x00de ) == 0xff38e9b7 and uint32( @h01 + 0x00e8 ) == 0xe13bec74 and uint32( @h01 + 0x00f1 ) == 0x614d6e75 and uint32( @h01 + 0x00fa ) == 0x56a2b5f0 and uint32( @h01 + 0x0107 ) == 0x5fc8d902 and uint32( @h01 + 0x011a ) == 0xe553a458 and uint32( @h01 + 0x0128 ) == 0x5fc8d902 and uint32( @h01 + 0x013d ) == 0x614d6e75
}

rule Cobaltbaltstrike_RAW_Payload_TCP_Bind_x64 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "3575408a-3309-5723-a49a-9c2088d43de9"

	strings:
		$h01 = { FC 48 83 E4 F0 E8 C8 00 00 00 41 51 41 50 52 51 56 48 31 D2 65 48 8B 52 }

	condition:
		uint32( @h01 + 0x0100 ) == 0x0726774c and uint32( @h01 + 0x0111 ) == 0x006b8029 and uint32( @h01 + 0x012d ) == 0xe0df0fea and uint32( @h01 + 0x0142 ) == 0x6737dbc2 and uint32( @h01 + 0x0150 ) == 0xff38e9b7 and uint32( @h01 + 0x0161 ) == 0xe13bec74 and uint32( @h01 + 0x016f ) == 0x614d6e75 and uint32( @h01 + 0x0198 ) == 0x5fc8d902 and uint32( @h01 + 0x01b8 ) == 0xe553a458 and uint32( @h01 + 0x01d2 ) == 0x5fc8d902 and uint32( @h01 + 0x01ee ) == 0x614d6e75
}

rule Cobaltbaltstrike_RAW_Payload_TCP_Reverse_x86 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		score = 75
		reference = "https://github.com/avast/ioc"
		id = "ac824189-614d-5bff-9bbb-a4244cace563"

	strings:
		$h01 = { FC E8 89 00 00 00 60 89 E5 31 D2 64 8B 52 30 8B 52 0C 8B 52 14 8B 72 28 }

	condition:
		uint32( @h01 + 0x009c ) == 0x0726774c and uint32( @h01 + 0x00ac ) == 0x006b8029 and uint32( @h01 + 0x00bb ) == 0xe0df0fea and uint32( @h01 + 0x00d5 ) == 0x6174a599 and uint32( @h01 + 0x00e5 ) == 0x56a2b5f0 and uint32( @h01 + 0x00f2 ) == 0x5fc8d902 and uint32( @h01 + 0x0105 ) == 0xe553a458 and uint32( @h01 + 0x0113 ) == 0x5fc8d902
}

rule Cobaltbaltstrike_RAW_Payload_TCP_Reverse_x64 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "21151a9c-1d15-514f-b33b-c9eff08463fb"

	strings:
		$h01 = { FC 48 83 E4 F0 E8 C8 00 00 00 41 51 41 50 52 51 56 48 31 D2 65 48 8B 52 }

	condition:
		uint32( @h01 + 0x0100 ) == 0x0726774c and uint32( @h01 + 0x0111 ) == 0x006b8029 and uint32( @h01 + 0x012d ) == 0xe0df0fea and uint32( @h01 + 0x0142 ) == 0x6174a599 and uint32( @h01 + 0x016b ) == 0x5fc8d902 and uint32( @h01 + 0x018b ) == 0xe553a458 and uint32( @h01 + 0x01a5 ) == 0x5fc8d902 and uint32( @h01 + 0x01c1 ) == 0x614d6e75
}

rule Cobaltbaltstrike_RAW_Payload_http_stager_x86 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "01f89b14-55f2-5a5e-b0d5-6bca609621fe"
		score = 70

	strings:
		$h01 = { FC E8 89 00 00 00 60 89 E5 31 D2 64 8B 52 30 8B 52 0C 8B 52 14 8B 72 28 }

	condition:
		uint32( @h01 + 0x009c ) == 0x0726774c and uint32( @h01 + 0x00aa ) == 0xa779563a and uint32( @h01 + 0x00c6 ) == 0xc69f8957 and uint32( @h01 + 0x00de ) == 0x3b2e55eb and uint32( @h01 + 0x00f2 ) == 0x7b18062d and uint32( @h01 + 0x010b ) == 0x5de2c5aa and uint32( @h01 + 0x0114 ) == 0x315e2145 and uint32( @h01 + 0x0123 ) == 0x0be057b7 and uint32( @h01 + 0x02c4 ) == 0x56a2b5f0 and uint32( @h01 + 0x02d8 ) == 0xe553a458 and uint32( @h01 + 0x02f3 ) == 0xe2899612
}

rule Cobaltbaltstrike_RAW_Payload_http_stager_x64 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "7eeeb2a1-4903-5649-ae30-fd43367ab468"
		score = 75

	strings:
		$h01 = { FC 48 83 E4 F0 E8 C8 00 00 00 41 51 41 50 52 51 56 48 31 D2 65 48 8B 52 }

	condition:
		uint32( @h01 + 0x00e9 ) == 0x0726774c and uint32( @h01 + 0x0101 ) == 0xa779563a and uint32( @h01 + 0x0120 ) == 0xc69f8957 and uint32( @h01 + 0x013f ) == 0x3b2e55eb and uint32( @h01 + 0x0163 ) == 0x7b18062d and uint32( @h01 + 0x0308 ) == 0x56a2b5f0 and uint32( @h01 + 0x0324 ) == 0xe553a458 and uint32( @h01 + 0x0342 ) == 0xe2899612
}

rule Cobaltbaltstrike_RAW_Payload_https_stager_x86 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "f1d7e939-92b5-5441-8014-b2390854d059"
		score = 80

	strings:
		$h01 = { FC E8 89 00 00 00 60 89 E5 31 D2 64 8B 52 30 8B 52 0C 8B 52 14 8B 72 28 }

	condition:
		uint32( @h01 + 0x009c ) == 0x0726774c and uint32( @h01 + 0x00af ) == 0xa779563a and uint32( @h01 + 0x00cb ) == 0xc69f8957 and uint32( @h01 + 0x00e7 ) == 0x3b2e55eb and uint32( @h01 + 0x0100 ) == 0x869e4675 and uint32( @h01 + 0x0110 ) == 0x7b18062d and uint32( @h01 + 0x0129 ) == 0x5de2c5aa and uint32( @h01 + 0x0132 ) == 0x315e2145 and uint32( @h01 + 0x0141 ) == 0x0be057b7 and uint32( @h01 + 0x02e9 ) == 0x56a2b5f0 and uint32( @h01 + 0x02fd ) == 0xe553a458 and uint32( @h01 + 0x0318 ) == 0xe2899612
}

rule Cobaltbaltstrike_RAW_Payload_https_stager_x64 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "5f9c7426-63be-5049-91fc-63b5c29618bd"
		score = 75

	strings:
		$h01 = { FC 48 83 E4 F0 E8 C8 00 00 00 41 51 41 50 52 51 56 48 31 D2 65 48 8B 52 }

	condition:
		uint32( @h01 + 0x00e9 ) == 0x0726774c and uint32( @h01 + 0x0101 ) == 0xa779563a and uint32( @h01 + 0x0123 ) == 0xc69f8957 and uint32( @h01 + 0x0142 ) == 0x3b2e55eb and uint32( @h01 + 0x016c ) == 0x869e4675 and uint32( @h01 + 0x0186 ) == 0x7b18062d and uint32( @h01 + 0x032b ) == 0x56a2b5f0 and uint32( @h01 + 0x0347 ) == 0xe553a458 and uint32( @h01 + 0x0365 ) == 0xe2899612
}

rule Cobaltbaltstrike_RAW_Payload_dns_stager_x86_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "d148ca33-b233-519d-8ba4-d389de721d15"

	strings:
		$h01 = { FC 00 E8 00 89 00 00 00 00 00 00 00 60 00 89 00 E5 00 31 00 D2 00 64 00 8B 00 52 00 30 00 8B 00 52 00 0C 00 8B 00 52 00 14 00 8B 00 72 00 28 }

	condition:
		uint32( @h01 + 0x0149 ) == 0xe5005300 and uint32( @h01 + 0x017d ) == 0x07002600 and uint32( @h01 + 0x0261 ) == 0xc9009c00 and uint32( @h01 + 0x0333 ) == 0x5600a200 and uint32( @h01 + 0x034b ) == 0xe0003500 and uint32( @h01 + 0x03cb ) == 0xcc008e00
}

rule Cobaltbaltstrike_RAW_Payload_smb_stager_x86_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "d88e050f-9e6c-5349-b809-ad7dc25a79b9"

	strings:
		$h01 = { FC 00 E8 00 89 00 00 00 00 00 00 00 60 00 89 00 E5 00 31 00 D2 00 64 00 8B 00 52 00 30 00 8B 00 52 00 0C 00 8B 00 52 00 14 00 8B 00 72 00 28 }

	condition:
		uint32( @h01 + 0x0145 ) == 0xe5005300 and uint32( @h01 + 0x018b ) == 0xd400df00 and uint32( @h01 + 0x01a7 ) == 0xe2007d00 and uint32( @h01 + 0x01f3 ) == 0xbb005f00 and uint32( @h01 + 0x021d ) == 0xbb005f00 and uint32( @h01 + 0x0265 ) == 0xfc00dd00 and uint32( @h01 + 0x0275 ) == 0x52008700 and uint32( @h01 + 0x0299 ) == 0x5600a200
}

rule Cobaltbaltstrike_RAW_Payload_TCP_Bind_x86_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "7f17985d-b245-5e95-9b35-af669aafc263"

	strings:
		$h01 = { FC 00 E8 00 89 00 00 00 00 00 00 00 60 00 89 00 E5 00 31 00 D2 00 64 00 8B 00 52 00 30 00 8B 00 52 00 0C 00 8B 00 52 00 14 00 8B 00 72 00 28 }

	condition:
		uint32( @h01 + 0x013b ) == 0x07002600 and uint32( @h01 + 0x015b ) == 0x00006b00 and uint32( @h01 + 0x0179 ) == 0xe000df00 and uint32( @h01 + 0x01ad ) == 0x67003700 and uint32( @h01 + 0x01bf ) == 0xff003800 and uint32( @h01 + 0x01d3 ) == 0xe1003b00 and uint32( @h01 + 0x01e5 ) == 0x61004d00 and uint32( @h01 + 0x01f7 ) == 0x5600a200 and uint32( @h01 + 0x0211 ) == 0x5f00c800 and uint32( @h01 + 0x0237 ) == 0xe5005300 and uint32( @h01 + 0x0253 ) == 0x5f00c800 and uint32( @h01 + 0x027d ) == 0x61004d00
}

rule Cobaltbaltstrike_RAW_Payload_TCP_Bind_x64_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "bd52fb44-379a-5c82-9c7c-b10c8080b53f"

	strings:
		$h01 = { FC 00 48 00 83 00 E4 00 F0 00 E8 00 C8 00 00 00 00 00 00 00 41 00 51 00 41 00 50 00 52 00 51 00 56 00 48 00 31 00 D2 00 65 00 48 00 8B 00 52 }

	condition:
		uint32( @h01 + 0x0203 ) == 0x07002600 and uint32( @h01 + 0x0225 ) == 0x00006b00 and uint32( @h01 + 0x025d ) == 0xe000df00 and uint32( @h01 + 0x0287 ) == 0x67003700 and uint32( @h01 + 0x02a3 ) == 0xff003800 and uint32( @h01 + 0x02c5 ) == 0xe1003b00 and uint32( @h01 + 0x02e1 ) == 0x61004d00 and uint32( @h01 + 0x0333 ) == 0x5f00c800 and uint32( @h01 + 0x0373 ) == 0xe5005300 and uint32( @h01 + 0x03a7 ) == 0x5f00c800 and uint32( @h01 + 0x03df ) == 0x61004d00
}

rule Cobaltbaltstrike_RAW_Payload_TCP_Reverse_x86_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "321c1f3f-b7fc-5408-b460-6aa4423d381c"

	strings:
		$h01 = { FC 00 E8 00 89 00 00 00 00 00 00 00 60 00 89 00 E5 00 31 00 D2 00 64 00 8B 00 52 00 30 00 8B 00 52 00 0C 00 8B 00 52 00 14 00 8B 00 72 00 28 }

	condition:
		uint32( @h01 + 0x013b ) == 0x07002600 and uint32( @h01 + 0x015b ) == 0x00006b00 and uint32( @h01 + 0x0179 ) == 0xe000df00 and uint32( @h01 + 0x01ad ) == 0x61007400 and uint32( @h01 + 0x01cd ) == 0x5600a200 and uint32( @h01 + 0x01e7 ) == 0x5f00c800 and uint32( @h01 + 0x020d ) == 0xe5005300 and uint32( @h01 + 0x0229 ) == 0x5f00c800
}

rule Cobaltbaltstrike_RAW_Payload_TCP_Reverse_x64_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "1cc2494c-1f39-5a72-93af-c267eaf768fe"

	strings:
		$h01 = { FC 00 48 00 83 00 E4 00 F0 00 E8 00 C8 00 00 00 00 00 00 00 41 00 51 00 41 00 50 00 52 00 51 00 56 00 48 00 31 00 D2 00 65 00 48 00 8B 00 52 }

	condition:
		uint32( @h01 + 0x0203 ) == 0x07002600 and uint32( @h01 + 0x0225 ) == 0x00006b00 and uint32( @h01 + 0x025d ) == 0xe000df00 and uint32( @h01 + 0x0287 ) == 0x61007400 and uint32( @h01 + 0x02d9 ) == 0x5f00c800 and uint32( @h01 + 0x0319 ) == 0xe5005300 and uint32( @h01 + 0x034d ) == 0x5f00c800 and uint32( @h01 + 0x0385 ) == 0x61004d00
}

rule Cobaltbaltstrike_RAW_Payload_http_stager_x86_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "c1602e85-5b42-5005-a6d1-7140cb57a3c7"

	strings:
		$h01 = { FC 00 E8 00 89 00 00 00 00 00 00 00 60 00 89 00 E5 00 31 00 D2 00 64 00 8B 00 52 00 30 00 8B 00 52 00 0C 00 8B 00 52 00 14 00 8B 00 72 00 28 }

	condition:
		uint32( @h01 + 0x013b ) == 0x07002600 and uint32( @h01 + 0x0157 ) == 0xa7007900 and uint32( @h01 + 0x018f ) == 0xc6009f00 and uint32( @h01 + 0x01bf ) == 0x3b002e00 and uint32( @h01 + 0x01e7 ) == 0x7b001800 and uint32( @h01 + 0x0219 ) == 0x5d00e200 and uint32( @h01 + 0x022b ) == 0x31005e00 and uint32( @h01 + 0x0249 ) == 0x0b00e000 and uint32( @h01 + 0x058b ) == 0x5600a200 and uint32( @h01 + 0x05b3 ) == 0xe5005300 and uint32( @h01 + 0x05e9 ) == 0xe2008900
}

rule Cobaltbaltstrike_RAW_Payload_http_stager_x64_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "78672e3b-6f76-573a-8a9a-610334baa389"

	strings:
		$h01 = { FC 00 48 00 83 00 E4 00 F0 00 E8 00 C8 00 00 00 00 00 00 00 41 00 51 00 41 00 50 00 52 00 51 00 56 00 48 00 31 00 D2 00 65 00 48 00 8B 00 52 }

	condition:
		uint32( @h01 + 0x01d5 ) == 0x07002600 and uint32( @h01 + 0x0205 ) == 0xa7007900 and uint32( @h01 + 0x0243 ) == 0xc6009f00 and uint32( @h01 + 0x0281 ) == 0x3b002e00 and uint32( @h01 + 0x02c9 ) == 0x7b001800 and uint32( @h01 + 0x0613 ) == 0x5600a200 and uint32( @h01 + 0x064b ) == 0xe5005300 and uint32( @h01 + 0x0687 ) == 0xe2008900
}

rule Cobaltbaltstrike_RAW_Payload_https_stager_x86_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "dcd3e5c8-7626-5a78-9f90-7a8e67311d90"

	strings:
		$h01 = { FC 00 E8 00 89 00 00 00 00 00 00 00 60 00 89 00 E5 00 31 00 D2 00 64 00 8B 00 52 00 30 00 8B 00 52 00 0C 00 8B 00 52 00 14 00 8B 00 72 00 28 }

	condition:
		uint32( @h01 + 0x013b ) == 0x07002600 and uint32( @h01 + 0x0161 ) == 0xa7007900 and uint32( @h01 + 0x0199 ) == 0xc6009f00 and uint32( @h01 + 0x01d1 ) == 0x3b002e00 and uint32( @h01 + 0x0203 ) == 0x86009e00 and uint32( @h01 + 0x0223 ) == 0x7b001800 and uint32( @h01 + 0x0255 ) == 0x5d00e200 and uint32( @h01 + 0x0267 ) == 0x31005e00 and uint32( @h01 + 0x0285 ) == 0x0b00e000 and uint32( @h01 + 0x05d5 ) == 0x5600a200 and uint32( @h01 + 0x05fd ) == 0xe5005300 and uint32( @h01 + 0x0633 ) == 0xe2008900
}

rule Cobaltbaltstrike_RAW_Payload_https_stager_x64_UTF16 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "aa93dd56-9589-5958-9711-ca2f9c763665"

	strings:
		$h01 = { FC 00 48 00 83 00 E4 00 F0 00 E8 00 C8 00 00 00 00 00 00 00 41 00 51 00 41 00 50 00 52 00 51 00 56 00 48 00 31 00 D2 00 65 00 48 00 8B 00 52 }

	condition:
		uint32( @h01 + 0x01d5 ) == 0x07002600 and uint32( @h01 + 0x0205 ) == 0xa7007900 and uint32( @h01 + 0x0249 ) == 0xc6009f00 and uint32( @h01 + 0x0287 ) == 0x3b002e00 and uint32( @h01 + 0x02db ) == 0x86009e00 and uint32( @h01 + 0x030f ) == 0x7b001800 and uint32( @h01 + 0x0659 ) == 0x5600a200 and uint32( @h01 + 0x0691 ) == 0xe5005300 and uint32( @h01 + 0x06cd ) == 0xe2008900
}

rule Cobaltbaltstrike_Payload_Encoded : hardened limited
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "b5176740-2dda-5e5d-8c0f-47a27846753d"
		score = 90

	strings:
		$s01 = {((30 78 66 63 2c 20 30 78 65 38 2c 20 30 78 38 39 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 36 30 2c 20 30 78 38 39 2c 20 30 78 65 35 2c 20 30 78 33 31 2c 20 30 78 64 32 2c 20 30 78 36 34 2c 20 30 78 38 62 2c 20 30 78 35 32 2c 20 30 78 33 30 2c 20 30 78 38 62) | (30 00 78 00 66 00 63 00 2c 00 20 00 30 00 78 00 65 00 38 00 2c 00 20 00 30 00 78 00 38 00 39 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 36 00 30 00 2c 00 20 00 30 00 78 00 38 00 39 00 2c 00 20 00 30 00 78 00 65 00 35 00 2c 00 20 00 30 00 78 00 33 00 31 00 2c 00 20 00 30 00 78 00 64 00 32 00 2c 00 20 00 30 00 78 00 36 00 34 00 2c 00 20 00 30 00 78 00 38 00 62 00 2c 00 20 00 30 00 78 00 35 00 32 00 2c 00 20 00 30 00 78 00 33 00 30 00 2c 00 20 00 30 00 78 00 38 00 62 00))}
		$s02 = {((30 78 66 63 2c 30 78 65 38 2c 30 78 38 39 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 36 30 2c 30 78 38 39 2c 30 78 65 35 2c 30 78 33 31 2c 30 78 64 32 2c 30 78 36 34 2c 30 78 38 62 2c 30 78 35 32 2c 30 78 33 30 2c 30 78 38 62) | (30 00 78 00 66 00 63 00 2c 00 30 00 78 00 65 00 38 00 2c 00 30 00 78 00 38 00 39 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 36 00 30 00 2c 00 30 00 78 00 38 00 39 00 2c 00 30 00 78 00 65 00 35 00 2c 00 30 00 78 00 33 00 31 00 2c 00 30 00 78 00 64 00 32 00 2c 00 30 00 78 00 36 00 34 00 2c 00 30 00 78 00 38 00 62 00 2c 00 30 00 78 00 35 00 32 00 2c 00 30 00 78 00 33 00 30 00 2c 00 30 00 78 00 38 00 62 00))}
		$s03 = {((30 78 66 63 2c 20 30 78 34 38 2c 20 30 78 38 33 2c 20 30 78 65 34 2c 20 30 78 66 30 2c 20 30 78 65 38 2c 20 30 78 63 38 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 34 31 2c 20 30 78 35 31 2c 20 30 78 34 31 2c 20 30 78 35 30 2c 20 30 78 35 32 2c 20 30 78 35 31) | (30 00 78 00 66 00 63 00 2c 00 20 00 30 00 78 00 34 00 38 00 2c 00 20 00 30 00 78 00 38 00 33 00 2c 00 20 00 30 00 78 00 65 00 34 00 2c 00 20 00 30 00 78 00 66 00 30 00 2c 00 20 00 30 00 78 00 65 00 38 00 2c 00 20 00 30 00 78 00 63 00 38 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 34 00 31 00 2c 00 20 00 30 00 78 00 35 00 31 00 2c 00 20 00 30 00 78 00 34 00 31 00 2c 00 20 00 30 00 78 00 35 00 30 00 2c 00 20 00 30 00 78 00 35 00 32 00 2c 00 20 00 30 00 78 00 35 00 31 00))}
		$s04 = {((30 78 66 63 2c 30 78 34 38 2c 30 78 38 33 2c 30 78 65 34 2c 30 78 66 30 2c 30 78 65 38 2c 30 78 63 38 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 34 31 2c 30 78 35 31 2c 30 78 34 31 2c 30 78 35 30 2c 30 78 35 32 2c 30 78 35 31) | (30 00 78 00 66 00 63 00 2c 00 30 00 78 00 34 00 38 00 2c 00 30 00 78 00 38 00 33 00 2c 00 30 00 78 00 65 00 34 00 2c 00 30 00 78 00 66 00 30 00 2c 00 30 00 78 00 65 00 38 00 2c 00 30 00 78 00 63 00 38 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 34 00 31 00 2c 00 30 00 78 00 35 00 31 00 2c 00 30 00 78 00 34 00 31 00 2c 00 30 00 78 00 35 00 30 00 2c 00 30 00 78 00 35 00 32 00 2c 00 30 00 78 00 35 00 31 00))}
		$s05 = {((66 63 65 38 38 39 30 30 30 30 30 30 36 30 38 39 65 35 33 31 64 32 36 34 38 62 35 32 33 30 38 62) | (66 00 63 00 65 00 38 00 38 00 39 00 30 00 30 00 30 00 30 00 30 00 30 00 36 00 30 00 38 00 39 00 65 00 35 00 33 00 31 00 64 00 32 00 36 00 34 00 38 00 62 00 35 00 32 00 33 00 30 00 38 00 62 00))}
		$s06 = {((66 63 20 65 38 20 38 39 20 30 30 20 30 30 20 30 30 20 36 30 20 38 39 20 65 35 20 33 31 20 64 32 20 36 34 20 38 62 20 35 32 20 33 30 20 38 62) | (66 00 63 00 20 00 65 00 38 00 20 00 38 00 39 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 36 00 30 00 20 00 38 00 39 00 20 00 65 00 35 00 20 00 33 00 31 00 20 00 64 00 32 00 20 00 36 00 34 00 20 00 38 00 62 00 20 00 35 00 32 00 20 00 33 00 30 00 20 00 38 00 62 00))}
		$s07 = {((66 63 34 38 38 33 65 34 66 30 65 38 63 38 30 30 30 30 30 30 34 31 35 31 34 31 35 30 35 32 35 31) | (66 00 63 00 34 00 38 00 38 00 33 00 65 00 34 00 66 00 30 00 65 00 38 00 63 00 38 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 31 00 35 00 31 00 34 00 31 00 35 00 30 00 35 00 32 00 35 00 31 00))}
		$s08 = {((66 63 20 34 38 20 38 33 20 65 34 20 66 30 20 65 38 20 63 38 20 30 30 20 30 30 20 30 30 20 34 31 20 35 31 20 34 31 20 35 30 20 35 32 20 35 31) | (66 00 63 00 20 00 34 00 38 00 20 00 38 00 33 00 20 00 65 00 34 00 20 00 66 00 30 00 20 00 65 00 38 00 20 00 63 00 38 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 34 00 31 00 20 00 35 00 31 00 20 00 34 00 31 00 20 00 35 00 30 00 20 00 35 00 32 00 20 00 35 00 31 00))}
		$s09 = {((2f 4f 69 4a 41 41 41 41 59 49 6e 6c 4d 64 4a 6b 69 31 49 77 69 31 49 4d 69 31 49 55 69 33 49 6f 44 37 64 4b 4a 6a 48 2f 4d 63 43 73 50 47 46 38 41 69 77 67 77 63 38 4e 41 63 66 69 38 46 4a 58) | (2f 00 4f 00 69 00 4a 00 41 00 41 00 41 00 41 00 59 00 49 00 6e 00 6c 00 4d 00 64 00 4a 00 6b 00 69 00 31 00 49 00 77 00 69 00 31 00 49 00 4d 00 69 00 31 00 49 00 55 00 69 00 33 00 49 00 6f 00 44 00 37 00 64 00 4b 00 4a 00 6a 00 48 00 2f 00 4d 00 63 00 43 00 73 00 50 00 47 00 46 00 38 00 41 00 69 00 77 00 67 00 77 00 63 00 38 00 4e 00 41 00 63 00 66 00 69 00 38 00 46 00 4a 00 58 00))}
		$s10 = {((2f 45 69 44 35 50 44 6f 79 41 41 41 41 45 46 52 51 56 42 53 55 56 5a 49 4d 64 4a 6c 53 49 74 53 59 45 69 4c 55 68 68 49 69 31 49 67 53 49 74 79 55 45 67 50 74 30 70 4b 54 54 48 4a 53 44 48 41) | (2f 00 45 00 69 00 44 00 35 00 50 00 44 00 6f 00 79 00 41 00 41 00 41 00 41 00 45 00 46 00 52 00 51 00 56 00 42 00 53 00 55 00 56 00 5a 00 49 00 4d 00 64 00 4a 00 6c 00 53 00 49 00 74 00 53 00 59 00 45 00 69 00 4c 00 55 00 68 00 68 00 49 00 69 00 31 00 49 00 67 00 53 00 49 00 74 00 79 00 55 00 45 00 67 00 50 00 74 00 30 00 70 00 4b 00 54 00 54 00 48 00 4a 00 53 00 44 00 48 00 41 00))}
		$s11 = {((33 38 75 71 49 79 4d 6a 51 36 72 47 45 76 46 48 71 48 45 54 71 48 45 76 71 48 45 33 71 46 45 4c 4c 4a 52 70 42 52 4c 63 45 75 4f 50 48 30 4a 66 49 51 38 44 34 75 77 75 49 75 54 42 30 33 46 30) | (33 00 38 00 75 00 71 00 49 00 79 00 4d 00 6a 00 51 00 36 00 72 00 47 00 45 00 76 00 46 00 48 00 71 00 48 00 45 00 54 00 71 00 48 00 45 00 76 00 71 00 48 00 45 00 33 00 71 00 46 00 45 00 4c 00 4c 00 4a 00 52 00 70 00 42 00 52 00 4c 00 63 00 45 00 75 00 4f 00 50 00 48 00 30 00 4a 00 66 00 49 00 51 00 38 00 44 00 34 00 75 00 77 00 75 00 49 00 75 00 54 00 42 00 30 00 33 00 46 00 30 00))}
		$s12 = {((33 32 75 67 78 39 50 4c 36 79 4d 6a 49 32 4a 79 59 6e 4e 78 63 6e 56 72 45 76 46 47 61 36 68 78 51 32 75 6f 63 54 74 72 71 48 45 44 61 36 68 52 63 32 73 73 6c 47 6c 70 62 68 4c 71 61 78 4c 6a) | (33 00 32 00 75 00 67 00 78 00 39 00 50 00 4c 00 36 00 79 00 4d 00 6a 00 49 00 32 00 4a 00 79 00 59 00 6e 00 4e 00 78 00 63 00 6e 00 56 00 72 00 45 00 76 00 46 00 47 00 61 00 36 00 68 00 78 00 51 00 32 00 75 00 6f 00 63 00 54 00 74 00 72 00 71 00 48 00 45 00 44 00 61 00 36 00 68 00 52 00 63 00 32 00 73 00 73 00 6c 00 47 00 6c 00 70 00 62 00 68 00 4c 00 71 00 61 00 78 00 4c 00 6a 00))}
		$s13 = {((2f 41 44 6f 41 49 6b 41 41 41 41 41 41 41 41 41 59 41 43 4a 41 4f 55 41 4d 51 44 53 41 47 51 41 69 77 42 53 41 44 41 41 69 77 42 53 41 41 77 41 69 77 42 53 41 42 51 41 69 77 42 79 41 43 67) | (2f 00 41 00 44 00 6f 00 41 00 49 00 6b 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 59 00 41 00 43 00 4a 00 41 00 4f 00 55 00 41 00 4d 00 51 00 44 00 53 00 41 00 47 00 51 00 41 00 69 00 77 00 42 00 53 00 41 00 44 00 41 00 41 00 69 00 77 00 42 00 53 00 41 00 41 00 77 00 41 00 69 00 77 00 42 00 53 00 41 00 42 00 51 00 41 00 69 00 77 00 42 00 79 00 41 00 43 00 67 00))}
		$s14 = {((2f 41 42 49 41 49 4d 41 35 41 44 77 41 4f 67 41 79 41 41 41 41 41 41 41 41 41 42 42 41 46 45 41 51 51 42 51 41 46 49 41 55 51 42 57 41 45 67 41 4d 51 44 53 41 47 55 41 53 41 43 4c 41 46 49) | (2f 00 41 00 42 00 49 00 41 00 49 00 4d 00 41 00 35 00 41 00 44 00 77 00 41 00 4f 00 67 00 41 00 79 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 42 00 42 00 41 00 46 00 45 00 41 00 51 00 51 00 42 00 51 00 41 00 46 00 49 00 41 00 55 00 51 00 42 00 57 00 41 00 45 00 67 00 41 00 4d 00 51 00 44 00 53 00 41 00 47 00 55 00 41 00 53 00 41 00 43 00 4c 00 41 00 46 00 49 00))}
		$s15 = {((33 79 50 4c 49 36 6f 6a 49 79 4d 6a 49 79 4d 6a 51 79 4f 71 49 38 59 6a 45 69 50 78 49 30 63 6a 71 43 4e 78 49 78 4d 6a 71 43 4e 78 49 79 38 6a 71 43 4e 78 49 7a 63 6a 71 43 4e 52 49 77 73 6a) | (33 00 79 00 50 00 4c 00 49 00 36 00 6f 00 6a 00 49 00 79 00 4d 00 6a 00 49 00 79 00 4d 00 6a 00 51 00 79 00 4f 00 71 00 49 00 38 00 59 00 6a 00 45 00 69 00 50 00 78 00 49 00 30 00 63 00 6a 00 71 00 43 00 4e 00 78 00 49 00 78 00 4d 00 6a 00 71 00 43 00 4e 00 78 00 49 00 79 00 38 00 6a 00 71 00 43 00 4e 00 78 00 49 00 7a 00 63 00 6a 00 71 00 43 00 4e 00 52 00 49 00 77 00 73 00 6a 00))}
		$s16 = {((33 79 4e 72 49 36 41 6a 78 79 50 54 49 38 73 6a 36 79 4d 6a 49 79 4d 6a 49 79 4e 69 49 33 49 6a 59 69 4e 7a 49 33 45 6a 63 69 4e 31 49 32 73 6a 45 69 50 78 49 30 59 6a 61 79 4f 6f 49 33 45 6a) | (33 00 79 00 4e 00 72 00 49 00 36 00 41 00 6a 00 78 00 79 00 50 00 54 00 49 00 38 00 73 00 6a 00 36 00 79 00 4d 00 6a 00 49 00 79 00 4d 00 6a 00 49 00 79 00 4e 00 69 00 49 00 33 00 49 00 6a 00 59 00 69 00 4e 00 7a 00 49 00 33 00 45 00 6a 00 63 00 69 00 4e 00 31 00 49 00 32 00 73 00 6a 00 45 00 69 00 50 00 78 00 49 00 30 00 59 00 6a 00 61 00 79 00 4f 00 6f 00 49 00 33 00 45 00 6a 00))}
		$s17 = {((41 72 72 61 79 28 2d 34 2c 2d 32 34 2c 2d 31 31 39 2c 30 2c 30 2c 30 2c 39 36 2c 2d 31 31 39 2c 2d 32 37 2c 34 39 2c 2d 34 36 2c 31 30 30 2c 2d 31 31 37 2c 38 32 2c 34 38 2c 2d 31 31 37) | (41 00 72 00 72 00 61 00 79 00 28 00 2d 00 34 00 2c 00 2d 00 32 00 34 00 2c 00 2d 00 31 00 31 00 39 00 2c 00 30 00 2c 00 30 00 2c 00 30 00 2c 00 39 00 36 00 2c 00 2d 00 31 00 31 00 39 00 2c 00 2d 00 32 00 37 00 2c 00 34 00 39 00 2c 00 2d 00 34 00 36 00 2c 00 31 00 30 00 30 00 2c 00 2d 00 31 00 31 00 37 00 2c 00 38 00 32 00 2c 00 34 00 38 00 2c 00 2d 00 31 00 31 00 37 00))}
		$s18 = {((41 72 72 61 79 28 2d 34 2c 20 2d 32 34 2c 20 2d 31 31 39 2c 20 30 2c 20 30 2c 20 30 2c 20 39 36 2c 20 2d 31 31 39 2c 20 2d 32 37 2c 20 34 39 2c 20 2d 34 36 2c 20 31 30 30 2c 20 2d 31 31 37 2c 20 38 32 2c 20 34 38 2c 20 2d 31 31 37) | (41 00 72 00 72 00 61 00 79 00 28 00 2d 00 34 00 2c 00 20 00 2d 00 32 00 34 00 2c 00 20 00 2d 00 31 00 31 00 39 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 39 00 36 00 2c 00 20 00 2d 00 31 00 31 00 39 00 2c 00 20 00 2d 00 32 00 37 00 2c 00 20 00 34 00 39 00 2c 00 20 00 2d 00 34 00 36 00 2c 00 20 00 31 00 30 00 30 00 2c 00 20 00 2d 00 31 00 31 00 37 00 2c 00 20 00 38 00 32 00 2c 00 20 00 34 00 38 00 2c 00 20 00 2d 00 31 00 31 00 37 00))}
		$s19 = {((41 72 72 61 79 28 2d 34 2c 37 32 2c 2d 31 32 35 2c 2d 32 38 2c 2d 31 36 2c 2d 32 34 2c 2d 35 36 2c 30 2c 30 2c 30 2c 36 35 2c 38 31 2c 36 35 2c 38 30 2c 38 32 2c 38 31) | (41 00 72 00 72 00 61 00 79 00 28 00 2d 00 34 00 2c 00 37 00 32 00 2c 00 2d 00 31 00 32 00 35 00 2c 00 2d 00 32 00 38 00 2c 00 2d 00 31 00 36 00 2c 00 2d 00 32 00 34 00 2c 00 2d 00 35 00 36 00 2c 00 30 00 2c 00 30 00 2c 00 30 00 2c 00 36 00 35 00 2c 00 38 00 31 00 2c 00 36 00 35 00 2c 00 38 00 30 00 2c 00 38 00 32 00 2c 00 38 00 31 00))}
		$s20 = {((41 72 72 61 79 28 2d 34 2c 20 37 32 2c 20 2d 31 32 35 2c 20 2d 32 38 2c 20 2d 31 36 2c 20 2d 32 34 2c 20 2d 35 36 2c 20 30 2c 20 30 2c 20 30 2c 20 36 35 2c 20 38 31 2c 20 36 35 2c 20 38 30 2c 20 38 32 2c 20 38 31) | (41 00 72 00 72 00 61 00 79 00 28 00 2d 00 34 00 2c 00 20 00 37 00 32 00 2c 00 20 00 2d 00 31 00 32 00 35 00 2c 00 20 00 2d 00 32 00 38 00 2c 00 20 00 2d 00 31 00 36 00 2c 00 20 00 2d 00 32 00 34 00 2c 00 20 00 2d 00 35 00 36 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 36 00 35 00 2c 00 20 00 38 00 31 00 2c 00 20 00 36 00 35 00 2c 00 20 00 38 00 30 00 2c 00 20 00 38 00 32 00 2c 00 20 00 38 00 31 00))}
		$s21 = {((43 68 72 28 2d 34 29 26 43 68 72 28 2d 32 34 29 26 43 68 72 28 2d 31 31 39 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 43 68 72 28 39 36 29 26 43 68 72 28 2d 31 31 39 29 26 43 68 72 28 2d 32 37 29 26 22 31 22 26 43 68 72 28 2d 34 36 29 26 22 64 22 26 43 68 72 28 2d 31 31 37 29 26 22 52 30 22 26 43 68 72 28 2d 31 31 37 29) | (43 00 68 00 72 00 28 00 2d 00 34 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 32 00 34 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 31 00 39 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 39 00 36 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 31 00 39 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 32 00 37 00 29 00 26 00 22 00 31 00 22 00 26 00 43 00 68 00 72 00 28 00 2d 00 34 00 36 00 29 00 26 00 22 00 64 00 22 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 31 00 37 00 29 00 26 00 22 00 52 00 30 00 22 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 31 00 37 00 29 00))}
		$s22 = {((43 68 72 28 2d 34 29 26 22 48 22 26 43 68 72 28 2d 31 32 35 29 26 43 68 72 28 2d 32 38 29 26 43 68 72 28 2d 31 36 29 26 43 68 72 28 2d 32 34 29 26 43 68 72 28 2d 35 36 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 22 41 51 41 50 52 51 56 48) | (43 00 68 00 72 00 28 00 2d 00 34 00 29 00 26 00 22 00 48 00 22 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 32 00 35 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 32 00 38 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 36 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 32 00 34 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 35 00 36 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 22 00 41 00 51 00 41 00 50 00 52 00 51 00 56 00 48 00))}
		$s23 = {((5c 78 66 63 5c 78 65 38 5c 78 38 39 5c 78 30 30 5c 78 30 30 5c 78 30 30 5c 78 36 30 5c 78 38 39 5c 78 65 35 5c 78 33 31 5c 78 64 32 5c 78 36 34 5c 78 38 62 5c 78 35 32 5c 78 33 30 5c 78 38 62) | (5c 00 78 00 66 00 63 00 5c 00 78 00 65 00 38 00 5c 00 78 00 38 00 39 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 36 00 30 00 5c 00 78 00 38 00 39 00 5c 00 78 00 65 00 35 00 5c 00 78 00 33 00 31 00 5c 00 78 00 64 00 32 00 5c 00 78 00 36 00 34 00 5c 00 78 00 38 00 62 00 5c 00 78 00 35 00 32 00 5c 00 78 00 33 00 30 00 5c 00 78 00 38 00 62 00))}
		$s24 = {((5c 78 66 63 5c 78 34 38 5c 78 38 33 5c 78 65 34 5c 78 66 30 5c 78 65 38 5c 78 63 38 5c 78 30 30 5c 78 30 30 5c 78 30 30 5c 78 34 31 5c 78 35 31 5c 78 34 31 5c 78 35 30 5c 78 35 32 5c 78 35 31) | (5c 00 78 00 66 00 63 00 5c 00 78 00 34 00 38 00 5c 00 78 00 38 00 33 00 5c 00 78 00 65 00 34 00 5c 00 78 00 66 00 30 00 5c 00 78 00 65 00 38 00 5c 00 78 00 63 00 38 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 34 00 31 00 5c 00 78 00 35 00 31 00 5c 00 78 00 34 00 31 00 5c 00 78 00 35 00 30 00 5c 00 78 00 35 00 32 00 5c 00 78 00 35 00 31 00))}

	condition:
		any of them
}

rule Cobaltbaltstrike_strike_Payload_XORed : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "0e075644-e278-5c5b-bdcc-dc2d6a32ce73"

	strings:
		$h01 = { 10 ?? 00 00 ?? ?? ?? 00 ?? ?? ?? ?? 61 61 61 61 }

	condition:
		uint32be( @h01 + 8 ) ^ uint32be( @h01 + 16 ) == 0xFCE88900 or uint32be( @h01 + 8 ) ^ uint32be( @h01 + 16 ) == 0xFC4883E4 or uint32be( @h01 + 8 ) ^ uint32be( @h01 + 16 ) == 0x4D5AE800 or uint32be( @h01 + 8 ) ^ uint32be( @h01 + 16 ) == 0x4D5A4152 or uint32be( @h01 + 8 ) ^ uint32be( @h01 + 16 ) == 0x90909090
}

rule Cobaltbaltstrike_Beacon_x86 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		score = 75
		reference = "https://github.com/avast/ioc"
		id = "6ffaafe6-2758-53e4-b5b8-6d8350baf428"

	strings:
		$h01 = { 4D 5A E8 00 00 00 00 5B 89 DF 52 45 55 89 E5 81 C3 ?? ?? ?? ?? FF D3 68 }
		$h11 = { 00 01 00 01 00 02 ?? ?? 00 02 00 01 00 02 ?? ?? 00 }
		$h12 = { 69 68 69 68 69 6B ?? ?? 69 6B 69 68 69 6B ?? ?? 69 }
		$h13 = { 2E 2F 2E 2F 2E 2C ?? ?? 2E 2C 2E 2F 2E 2C ?? ?? 2E }

	condition:
		$h01 and any of ( $h1* )
}

rule Cobaltbaltstrike_Beacon_x64 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		score = 75
		id = "5d6d86ec-9e05-5596-b623-30f44c6f44db"

	strings:
		$h01 = { 4D 5A 41 52 55 48 89 E5 48 81 EC 20 00 00 00 48 8D 1D EA FF FF FF 48 89 }
		$h11 = { 00 01 00 01 00 02 ?? ?? 00 02 00 01 00 02 ?? ?? 00 }
		$h12 = { 69 68 69 68 69 6B ?? ?? 69 6B 69 68 69 6B ?? ?? 69 }
		$h13 = { 2E 2F 2E 2F 2E 2C ?? ?? 2E 2C 2E 2F 2E 2C ?? ?? 2E }

	condition:
		$h01 and any of ( $h1* )
}

rule Cobaltbaltstrike_Beacon_Encoded : hardened limited
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "497e2a32-015a-5786-a6fa-de7084bfc389"

	strings:
		$s01 = {((30 78 34 64 2c 20 30 78 35 61 2c 20 30 78 65 38 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 35 62 2c 20 30 78 38 39 2c 20 30 78 64 66 2c 20 30 78 35 32 2c 20 30 78 34 35 2c 20 30 78 35 35 2c 20 30 78 38 39 2c 20 30 78 65 35 2c 20 30 78 38 31) | (30 00 78 00 34 00 64 00 2c 00 20 00 30 00 78 00 35 00 61 00 2c 00 20 00 30 00 78 00 65 00 38 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 35 00 62 00 2c 00 20 00 30 00 78 00 38 00 39 00 2c 00 20 00 30 00 78 00 64 00 66 00 2c 00 20 00 30 00 78 00 35 00 32 00 2c 00 20 00 30 00 78 00 34 00 35 00 2c 00 20 00 30 00 78 00 35 00 35 00 2c 00 20 00 30 00 78 00 38 00 39 00 2c 00 20 00 30 00 78 00 65 00 35 00 2c 00 20 00 30 00 78 00 38 00 31 00))}
		$s02 = {((30 78 34 64 2c 30 78 35 61 2c 30 78 65 38 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 35 62 2c 30 78 38 39 2c 30 78 64 66 2c 30 78 35 32 2c 30 78 34 35 2c 30 78 35 35 2c 30 78 38 39 2c 30 78 65 35 2c 30 78 38 31) | (30 00 78 00 34 00 64 00 2c 00 30 00 78 00 35 00 61 00 2c 00 30 00 78 00 65 00 38 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 35 00 62 00 2c 00 30 00 78 00 38 00 39 00 2c 00 30 00 78 00 64 00 66 00 2c 00 30 00 78 00 35 00 32 00 2c 00 30 00 78 00 34 00 35 00 2c 00 30 00 78 00 35 00 35 00 2c 00 30 00 78 00 38 00 39 00 2c 00 30 00 78 00 65 00 35 00 2c 00 30 00 78 00 38 00 31 00))}
		$s03 = {((30 78 34 64 2c 20 30 78 35 61 2c 20 30 78 34 31 2c 20 30 78 35 32 2c 20 30 78 35 35 2c 20 30 78 34 38 2c 20 30 78 38 39 2c 20 30 78 65 35 2c 20 30 78 34 38 2c 20 30 78 38 31 2c 20 30 78 65 63 2c 20 30 78 32 30 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 30 30 2c 20 30 78 34 38) | (30 00 78 00 34 00 64 00 2c 00 20 00 30 00 78 00 35 00 61 00 2c 00 20 00 30 00 78 00 34 00 31 00 2c 00 20 00 30 00 78 00 35 00 32 00 2c 00 20 00 30 00 78 00 35 00 35 00 2c 00 20 00 30 00 78 00 34 00 38 00 2c 00 20 00 30 00 78 00 38 00 39 00 2c 00 20 00 30 00 78 00 65 00 35 00 2c 00 20 00 30 00 78 00 34 00 38 00 2c 00 20 00 30 00 78 00 38 00 31 00 2c 00 20 00 30 00 78 00 65 00 63 00 2c 00 20 00 30 00 78 00 32 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 30 00 30 00 2c 00 20 00 30 00 78 00 34 00 38 00))}
		$s04 = {((30 78 34 64 2c 30 78 35 61 2c 30 78 34 31 2c 30 78 35 32 2c 30 78 35 35 2c 30 78 34 38 2c 30 78 38 39 2c 30 78 65 35 2c 30 78 34 38 2c 30 78 38 31 2c 30 78 65 63 2c 30 78 32 30 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 30 30 2c 30 78 34 38) | (30 00 78 00 34 00 64 00 2c 00 30 00 78 00 35 00 61 00 2c 00 30 00 78 00 34 00 31 00 2c 00 30 00 78 00 35 00 32 00 2c 00 30 00 78 00 35 00 35 00 2c 00 30 00 78 00 34 00 38 00 2c 00 30 00 78 00 38 00 39 00 2c 00 30 00 78 00 65 00 35 00 2c 00 30 00 78 00 34 00 38 00 2c 00 30 00 78 00 38 00 31 00 2c 00 30 00 78 00 65 00 63 00 2c 00 30 00 78 00 32 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 30 00 30 00 2c 00 30 00 78 00 34 00 38 00))}
		$s05 = {((34 64 35 61 65 38 30 30 30 30 30 30 30 30 35 62 38 39 64 66 35 32 34 35 35 35 38 39 65 35 38 31) | (34 00 64 00 35 00 61 00 65 00 38 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 35 00 62 00 38 00 39 00 64 00 66 00 35 00 32 00 34 00 35 00 35 00 35 00 38 00 39 00 65 00 35 00 38 00 31 00))}
		$s06 = {((34 64 20 35 61 20 65 38 20 30 30 20 30 30 20 30 30 20 30 30 20 35 62 20 38 39 20 64 66 20 35 32 20 34 35 20 35 35 20 38 39 20 65 35 20 38 31) | (34 00 64 00 20 00 35 00 61 00 20 00 65 00 38 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 35 00 62 00 20 00 38 00 39 00 20 00 64 00 66 00 20 00 35 00 32 00 20 00 34 00 35 00 20 00 35 00 35 00 20 00 38 00 39 00 20 00 65 00 35 00 20 00 38 00 31 00))}
		$s07 = {((34 64 35 61 34 31 35 32 35 35 34 38 38 39 65 35 34 38 38 31 65 63 32 30 30 30 30 30 30 30 34 38) | (34 00 64 00 35 00 61 00 34 00 31 00 35 00 32 00 35 00 35 00 34 00 38 00 38 00 39 00 65 00 35 00 34 00 38 00 38 00 31 00 65 00 63 00 32 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 38 00))}
		$s08 = {((34 64 20 35 61 20 34 31 20 35 32 20 35 35 20 34 38 20 38 39 20 65 35 20 34 38 20 38 31 20 65 63 20 32 30 20 30 30 20 30 30 20 30 30 20 34 38) | (34 00 64 00 20 00 35 00 61 00 20 00 34 00 31 00 20 00 35 00 32 00 20 00 35 00 35 00 20 00 34 00 38 00 20 00 38 00 39 00 20 00 65 00 35 00 20 00 34 00 38 00 20 00 38 00 31 00 20 00 65 00 63 00 20 00 32 00 30 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 30 00 30 00 20 00 34 00 38 00))}
		$s09 = {((54 56 72 6f 41 41 41 41 41 46 75 4a 33 31 4a 46 56 59 6e 6c 67) | (54 00 56 00 72 00 6f 00 41 00 41 00 41 00 41 00 41 00 46 00 75 00 4a 00 33 00 31 00 4a 00 46 00 56 00 59 00 6e 00 6c 00 67 00))}
		$s10 = {((54 56 70 42 55 6c 56 49 69 65 56 49 67 65 77 67 41 41 41 41 53) | (54 00 56 00 70 00 42 00 55 00 6c 00 56 00 49 00 69 00 65 00 56 00 49 00 67 00 65 00 77 00 67 00 41 00 41 00 41 00 41 00 53 00))}
		$s11 = {((62 6e 6e 4c 49 79 4d 6a 49 33 69 71 2f 48 46 6d 64 71 72 47 6f) | (62 00 6e 00 6e 00 4c 00 49 00 79 00 4d 00 6a 00 49 00 33 00 69 00 71 00 2f 00 48 00 46 00 6d 00 64 00 71 00 72 00 47 00 6f 00))}
		$s12 = {((62 6e 6c 69 63 58 5a 72 71 73 5a 72 6f 73 38 44 49 79 4d 6a 61) | (62 00 6e 00 6c 00 69 00 63 00 58 00 5a 00 72 00 71 00 73 00 5a 00 72 00 6f 00 73 00 38 00 44 00 49 00 79 00 4d 00 6a 00 61 00))}
		$s13 = {((54 51 42 61 41 4f 67 41 41 41 41 41 41 41 41 41 41 41 42 62 41 49 6b 41 33 77 42 53 41 45 55 41 56 51 43 4a 41 4f 55 41 67) | (54 00 51 00 42 00 61 00 41 00 4f 00 67 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 42 00 62 00 41 00 49 00 6b 00 41 00 33 00 77 00 42 00 53 00 41 00 45 00 55 00 41 00 56 00 51 00 43 00 4a 00 41 00 4f 00 55 00 41 00 67 00))}
		$s14 = {((54 51 42 61 41 45 45 41 55 67 42 56 41 45 67 41 69 51 44 6c 41 45 67 41 67 51 44 73 41 43 41 41 41 41 41 41 41 41 41 41 53) | (54 00 51 00 42 00 61 00 41 00 45 00 45 00 41 00 55 00 67 00 42 00 56 00 41 00 45 00 67 00 41 00 69 00 51 00 44 00 6c 00 41 00 45 00 67 00 41 00 67 00 51 00 44 00 73 00 41 00 43 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 53 00))}
		$s15 = {((62 69 4e 35 49 32 49 6a 63 53 4e 32 49 32 73 6a 71 69 50 47 49 32 73 6a 6f 69 50 50 49 77 4d 6a 49 79 4d 6a 49 79 4d 6a 61) | (62 00 69 00 4e 00 35 00 49 00 32 00 49 00 6a 00 63 00 53 00 4e 00 32 00 49 00 32 00 73 00 6a 00 71 00 69 00 50 00 47 00 49 00 32 00 73 00 6a 00 6f 00 69 00 50 00 50 00 49 00 77 00 4d 00 6a 00 49 00 79 00 4d 00 6a 00 49 00 79 00 4d 00 6a 00 61 00))}
		$s16 = {((62 69 4e 35 49 38 73 6a 49 79 4d 6a 49 79 4d 6a 49 79 4e 34 49 36 6f 6a 2f 43 4e 78 49 32 59 6a 64 69 4f 71 49 38 59 6a 6f) | (62 00 69 00 4e 00 35 00 49 00 38 00 73 00 6a 00 49 00 79 00 4d 00 6a 00 49 00 79 00 4d 00 6a 00 49 00 79 00 4e 00 34 00 49 00 36 00 6f 00 6a 00 2f 00 43 00 4e 00 78 00 49 00 32 00 59 00 6a 00 64 00 69 00 4f 00 71 00 49 00 38 00 59 00 6a 00 6f 00))}
		$s17 = {((41 72 72 61 79 28 37 37 2c 39 30 2c 2d 32 34 2c 30 2c 30 2c 30 2c 30 2c 39 31 2c 2d 31 31 39 2c 2d 33 33 2c 38 32 2c 36 39 2c 38 35 2c 2d 31 31 39 2c 2d 32 37 2c 2d 31 32 37) | (41 00 72 00 72 00 61 00 79 00 28 00 37 00 37 00 2c 00 39 00 30 00 2c 00 2d 00 32 00 34 00 2c 00 30 00 2c 00 30 00 2c 00 30 00 2c 00 30 00 2c 00 39 00 31 00 2c 00 2d 00 31 00 31 00 39 00 2c 00 2d 00 33 00 33 00 2c 00 38 00 32 00 2c 00 36 00 39 00 2c 00 38 00 35 00 2c 00 2d 00 31 00 31 00 39 00 2c 00 2d 00 32 00 37 00 2c 00 2d 00 31 00 32 00 37 00))}
		$s18 = {((41 72 72 61 79 28 37 37 2c 20 39 30 2c 20 2d 32 34 2c 20 30 2c 20 30 2c 20 30 2c 20 30 2c 20 39 31 2c 20 2d 31 31 39 2c 20 2d 33 33 2c 20 38 32 2c 20 36 39 2c 20 38 35 2c 20 2d 31 31 39 2c 20 2d 32 37 2c 20 2d 31 32 37) | (41 00 72 00 72 00 61 00 79 00 28 00 37 00 37 00 2c 00 20 00 39 00 30 00 2c 00 20 00 2d 00 32 00 34 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 39 00 31 00 2c 00 20 00 2d 00 31 00 31 00 39 00 2c 00 20 00 2d 00 33 00 33 00 2c 00 20 00 38 00 32 00 2c 00 20 00 36 00 39 00 2c 00 20 00 38 00 35 00 2c 00 20 00 2d 00 31 00 31 00 39 00 2c 00 20 00 2d 00 32 00 37 00 2c 00 20 00 2d 00 31 00 32 00 37 00))}
		$s19 = {((41 72 72 61 79 28 37 37 2c 39 30 2c 36 35 2c 38 32 2c 38 35 2c 37 32 2c 2d 31 31 39 2c 2d 32 37 2c 37 32 2c 2d 31 32 37 2c 2d 32 30 2c 33 32 2c 30 2c 30 2c 30 2c 37 32) | (41 00 72 00 72 00 61 00 79 00 28 00 37 00 37 00 2c 00 39 00 30 00 2c 00 36 00 35 00 2c 00 38 00 32 00 2c 00 38 00 35 00 2c 00 37 00 32 00 2c 00 2d 00 31 00 31 00 39 00 2c 00 2d 00 32 00 37 00 2c 00 37 00 32 00 2c 00 2d 00 31 00 32 00 37 00 2c 00 2d 00 32 00 30 00 2c 00 33 00 32 00 2c 00 30 00 2c 00 30 00 2c 00 30 00 2c 00 37 00 32 00))}
		$s20 = {((41 72 72 61 79 28 37 37 2c 20 39 30 2c 20 36 35 2c 20 38 32 2c 20 38 35 2c 20 37 32 2c 20 2d 31 31 39 2c 20 2d 32 37 2c 20 37 32 2c 20 2d 31 32 37 2c 20 2d 32 30 2c 20 33 32 2c 20 30 2c 20 30 2c 20 30 2c 20 37 32) | (41 00 72 00 72 00 61 00 79 00 28 00 37 00 37 00 2c 00 20 00 39 00 30 00 2c 00 20 00 36 00 35 00 2c 00 20 00 38 00 32 00 2c 00 20 00 38 00 35 00 2c 00 20 00 37 00 32 00 2c 00 20 00 2d 00 31 00 31 00 39 00 2c 00 20 00 2d 00 32 00 37 00 2c 00 20 00 37 00 32 00 2c 00 20 00 2d 00 31 00 32 00 37 00 2c 00 20 00 2d 00 32 00 30 00 2c 00 20 00 33 00 32 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 30 00 2c 00 20 00 37 00 32 00))}
		$s21 = {((4d 5a 22 26 43 68 72 28 2d 32 37 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 43 68 72 28 39 31 29 26 43 68 72 28 2d 31 31 39 29 26 43 68 72 28 2d 33 33 29 26 22 52 45 55 22 26 43 68 72 28 2d 31 31 39 29 26 43 68 72 28 2d 32 37 29 26 43 68 72 28 2d 31 32 37 29) | (4d 00 5a 00 22 00 26 00 43 00 68 00 72 00 28 00 2d 00 32 00 37 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 39 00 31 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 31 00 39 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 33 00 33 00 29 00 26 00 22 00 52 00 45 00 55 00 22 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 31 00 39 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 32 00 37 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 32 00 37 00 29 00))}
		$s22 = {((4d 5a 41 52 55 48 22 26 43 68 72 28 2d 31 31 39 29 26 43 68 72 28 2d 32 37 29 26 22 48 22 26 43 68 72 28 2d 31 32 37 29 26 43 68 72 28 2d 32 30 29 26 43 68 72 28 33 32 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 43 68 72 28 30 29 26 22 48) | (4d 00 5a 00 41 00 52 00 55 00 48 00 22 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 31 00 39 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 32 00 37 00 29 00 26 00 22 00 48 00 22 00 26 00 43 00 68 00 72 00 28 00 2d 00 31 00 32 00 37 00 29 00 26 00 43 00 68 00 72 00 28 00 2d 00 32 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 33 00 32 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 43 00 68 00 72 00 28 00 30 00 29 00 26 00 22 00 48 00))}
		$s23 = {((5c 78 34 64 5c 78 35 61 5c 78 65 38 5c 78 30 30 5c 78 30 30 5c 78 30 30 5c 78 30 30 5c 78 35 62 5c 78 38 39 5c 78 64 66 5c 78 35 32 5c 78 34 35 5c 78 35 35 5c 78 38 39 5c 78 65 35 5c 78 38 31) | (5c 00 78 00 34 00 64 00 5c 00 78 00 35 00 61 00 5c 00 78 00 65 00 38 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 35 00 62 00 5c 00 78 00 38 00 39 00 5c 00 78 00 64 00 66 00 5c 00 78 00 35 00 32 00 5c 00 78 00 34 00 35 00 5c 00 78 00 35 00 35 00 5c 00 78 00 38 00 39 00 5c 00 78 00 65 00 35 00 5c 00 78 00 38 00 31 00))}
		$s24 = {((5c 78 34 64 5c 78 35 61 5c 78 34 31 5c 78 35 32 5c 78 35 35 5c 78 34 38 5c 78 38 39 5c 78 65 35 5c 78 34 38 5c 78 38 31 5c 78 65 63 5c 78 32 30 5c 78 30 30 5c 78 30 30 5c 78 30 30 5c 78 34 38) | (5c 00 78 00 34 00 64 00 5c 00 78 00 35 00 61 00 5c 00 78 00 34 00 31 00 5c 00 78 00 35 00 32 00 5c 00 78 00 35 00 35 00 5c 00 78 00 34 00 38 00 5c 00 78 00 38 00 39 00 5c 00 78 00 65 00 35 00 5c 00 78 00 34 00 38 00 5c 00 78 00 38 00 31 00 5c 00 78 00 65 00 63 00 5c 00 78 00 32 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 30 00 30 00 5c 00 78 00 34 00 38 00))}

	condition:
		any of them
}

rule Cobaltbaltstrike_Beacon_XORed_x86 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "d93c20e6-3e01-5132-88a0-63ace507cae9"

	strings:
		$h01 = { FC E8??000000 [0-32] EB27 ?? 8B?? 83??04 8B?? 31?? 83??04 ?? 8B?? 31?? 89?? 31?? 83??04 83??04 31?? 39?? 7402 EBEA ?? FF?? E8D4FFFFFF }
		$h02 = { FC E8??000000 [0-32] EB2B ?? 8B??00 83C504 8B??00 31?? 83C504 55 8B??00 31?? 89??00 31?? 83C504 83??04 31?? 39?? 7402 EBE8 ?? FF?? E8D0FFFFFF }
		$h11 = { 7402 EB(E8|EA) ?? FF?? E8(D0|D4)FFFFFF }

	condition:
		any of ( $h0* ) and ( uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x4D5AE800 or uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x904D5AE8 or uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x90904D5A or uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x9090904D or uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x90909090 )
}

rule Cobaltbaltstrike_Beacon_XORed_x64 : hardened
{
	meta:
		author = "Avast Threat Intel Team"
		description = "Detects CobaltStrike payloads"
		reference = "https://github.com/avast/ioc"
		id = "15be610a-7552-5473-8da2-639220313783"

	strings:
		$h01 = { FC 4883E4F0 EB33 5D 8B4500 4883C504 8B4D00 31C1 4883C504 55 8B5500 31C2 895500 31D0 4883C504 83E904 31D2 39D1 7402 EBE7 58 FC 4883E4F0 FFD0 E8C8FFFFFF }
		$h11 = { FC 4883E4F0 FFD0 E8C8FFFFFF }

	condition:
		$h01 and ( uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x4D5A4152 or uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x904D5A41 or uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x90904D5A or uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x9090904D or uint32be( @h11 + 12 ) ^ uint32be( @h11 + 20 ) == 0x90909090 )
}

