////////////////////////////////////////////////////////
// YARA ruleset: Remcos.yar
// license: Other
// repository: kevoreilly/CAPEv2
// url: https://github.com/kevoreilly/CAPEv2/blob/3cff06445d2f56ba1cea2846e79a7df06ac39c46/data/yara/CAPE/Remcos.yar

// original YARA name: Remcos
private rule Remcos0 {
    meta:
        author = "kevoreilly"
        description = "Remcos Payload"
        cape_type = "Remcos Payload"
    strings:
        $name  = "Remcos" nocase
        $time   = "%02i:%02i:%02i:%03i"
        $crypto1 = {81 E1 FF 00 00 80 79 ?? 4? 81 C9 00 FF FF FF 4? 8A ?4 8?}
        $crypto2 = {0F B6 [1-7] 8B 45 08 [0-2] 8D 34 07 8B 01 03 C2 8B CB 99 F7 F9 8A 84 95 ?? ?? FF FF 30 06 47 3B 7D 0C 72}
    condition:
        uint16(0) == 0x5A4D and ($name) and ($time) and any of ($crypto*)
}

////////////////////////////////////////////////////////

////////////////////////////////////////////////////////
// YARA ruleset: Windows_Trojan_Remcos.yar
// license: Other
// repository: elastic/protections-artifacts
// url: https://github.com/elastic/protections-artifacts/blob/f98777756fcfbe5ab05a296388044a2dbb962557/yara/rules/Windows_Trojan_Remcos.yar

// original YARA name: Windows_Trojan_Remcos_b296e965
private rule Remcos1 {
    meta:
        author = "Elastic Security"
        id = "b296e965-a99e-4446-b969-ba233a2a8af4"
        fingerprint = "a5267bc2dee28a3ef58beeb7e4a151699e3e561c16ce0ab9eb27de33c122664d"
        creation_date = "2021-06-10"
        last_modified = "2021-08-23"
        threat_name = "Windows.Trojan.Remcos"
        reference = "https://www.elastic.co/security-labs/exploring-the-ref2731-intrusion-set"
        reference_sample = "0ebeffa44bd1c3603e30688ace84ea638fbcf485ca55ddcfd6fbe90609d4f3ed"
        severity = 100
        arch_context = "x86"
        scan_context = "file, memory"
        license = "Elastic License v2"
        os = "windows"
    strings:
        $a1 = "Remcos restarted by watchdog!" ascii fullword
        $a2 = "Mutex_RemWatchdog" ascii fullword
        $a3 = "%02i:%02i:%02i:%03i"
        $a4 = "* Remcos v" ascii fullword
    condition:
        2 of them
}

// original YARA name: Windows_Trojan_Remcos_7591e9f1
private rule Remcos2 {
    meta:
        author = "Elastic Security"
        id = "7591e9f1-452d-4731-9bec-545fb0272c80"
        fingerprint = "9436c314f89a09900a9b3c2fd9bab4a0423912427cf47b71edce5eba31132449"
        creation_date = "2023-06-23"
        last_modified = "2023-07-10"
        threat_name = "Windows.Trojan.Remcos"
        reference = "https://www.elastic.co/security-labs/exploring-the-ref2731-intrusion-set"
        reference_sample = "4e6e5ecd1cf9c88d536c894d74320c77967fe08c75066098082bf237283842fa"
        severity = 100
        arch_context = "x86"
        scan_context = "file, memory"
        license = "Elastic License v2"
        os = "windows"
    strings:
        $a1 = "ServRem" ascii fullword
        $a2 = "Screenshots" ascii fullword
        $a3 = "MicRecords" ascii fullword
        $a4 = "remcos.exe" wide nocase fullword
        $a5 = "Remcos" wide fullword
        $a6 = "logs.dat" wide fullword
    condition:
        3 of them
}


////////////////////////////////////////////////////////

////////////////////////////////////////////////////////
// YARA ruleset: Remcos.yara
// license: Other
// repository: JPCERTCC/jpcert-yara
// url: https://github.com/JPCERTCC/jpcert-yara/blob/0722a9365ec6bc969c517c623cd166743d1bc473/other/Remcos.yara

// original YARA name: malware_Remcos_strings
private rule Remcos3 {
          meta:
            description = "detect Remcos in memory"
            author = "JPCERT/CC Incident Response Group"
            rule_usage = "memory scan"
            hash1 = "7d5efb7e8b8947e5fe1fa12843a2faa0ebdfd7137582e5925a0b9c6a9350b0a5"

          strings:
            $remcos = "Remcos" ascii fullword
            $url1 = "Breaking-Security.Net" ascii fullword
            $url2 = "BreakingSecurity.Net" ascii fullword
            $resource = "SETTINGS" ascii wide fullword

          condition:
            1 of ($url*) and $remcos and $resource
}

////////////////////////////////////////////////////////


////////////////////////////////////////////////////////
// YARA ruleset: win.remcos_auto.yar
// repository: malpedia/signator-rules
// url: https://github.com/malpedia/signator-rules/blob/fbacfc09b84d53d410385e66a8e56f25016c588a/rules/win.remcos_auto.yar

// original YARA name: win_remcos_auto
private rule Remcos4 {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.remcos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remcos"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7410 6a00 ff35???????? ff15???????? }
            // n = 4, score = 2000
            //   7410                 | je                  0x12
            //   6a00                 | push                0
            //   ff35????????         |                     
            //   ff15????????         |                     

        $sequence_1 = { 50 ff15???????? 8d45f0 33f6 }
            // n = 4, score = 2000
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   33f6                 | xor                 esi, esi

        $sequence_2 = { 6a09 ff35???????? ff15???????? ff35???????? ff15???????? }
            // n = 5, score = 2000
            //   6a09                 | push                9
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   ff35????????         |                     
            //   ff15????????         |                     

        $sequence_3 = { 8d45f8 50 ff15???????? ff7508 }
            // n = 4, score = 2000
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_4 = { 7508 ff15???????? 33c0 5f }
            // n = 4, score = 2000
            //   7508                 | jne                 0xa
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi

        $sequence_5 = { 6a09 ff35???????? ff15???????? ff35???????? }
            // n = 4, score = 2000
            //   6a09                 | push                9
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   ff35????????         |                     

        $sequence_6 = { ff15???????? 50 ff15???????? 8d45f0 33f6 }
            // n = 5, score = 2000
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   33f6                 | xor                 esi, esi

        $sequence_7 = { 50 6a28 ff15???????? 50 ff15???????? 8d45f0 33f6 }
            // n = 7, score = 2000
            //   50                   | push                eax
            //   6a28                 | push                0x28
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   33f6                 | xor                 esi, esi

        $sequence_8 = { 51 51 8d45f8 c745f808000000 50 ff15???????? ff15???????? }
            // n = 7, score = 2000
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   c745f808000000       | mov                 dword ptr [ebp - 8], 8
            //   50                   | push                eax
            //   ff15????????         |                     
            //   ff15????????         |                     

        $sequence_9 = { 85c0 7410 6a00 ff35???????? ff15???????? }
            // n = 5, score = 2000
            //   85c0                 | test                eax, eax
            //   7410                 | je                  0x12
            //   6a00                 | push                0
            //   ff35????????         |                     
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 1054720
}
////////////////////////////////////////////////////////

////////////////////////////////////////////////////////
// YARA ruleset: remcos.yar
// license: MIT License
// repository: kevthehermit/RATDecoders
// url: https://github.com/kevthehermit/RATDecoders/blob/d675ba1c06e6dd8365149c9ee8a8db1a6e5e508e/malwareconfig/yaraRules/remcos.yar

// original YARA name: Remcos
private rule Remcos5 {
meta:
 author = "@neonprimetime"
 description = "Remcos RAT"
strings:
 $a1 = "Software\\Remcos"
 $a2 = "\\remcos\\"
 $a3 = "REMCOS v"
 $b1 = "Keylogger Started"
 $b2 = "Connected to C&C"
 $b3 = "Screenshots"
 $b4 = "OpenCamera"
 $b5 = "Uploading file to C&C"
 $b6 = "Initializing connection to C&C"
 $b7 = "cleared!]"
 $b8 = "EnableLUA /t REG_DWORD /d 0"

 $b9 = "Uploading file to C&C"
 $b10 = "%02i:%02i:%02i:%03i"
 $b11 = "[Firefox StoredLogins Cleared!]"
 $b12 = "licence_code.txt"

condition:
 1 of ($a*) or 3 of ($b*)
}

////////////////////////////////////////////////////////

////////////////////////////////////////////////////////
// YARA ruleset: MAL_C2_Remcos.yar
// license: MIT License
// repository: 100DaysofYARA/2024
// url: https://github.com/100DaysofYARA/2024/blob/7df92fafb900e3f148d927ac8dd68bfeaea0c332/petermstewart/MAL_C2_Remcos.yar

// original YARA name: MAL_Remcos_strings
private rule Remcos6 {
    meta:
        description = "Matches strings found in Remcos RAT samples."
        last_modified = "2024-03-20"
        author = "@petermstewart"
        DaysofYara = "80/100"
        sha256 = "b3d7fad59a0ae75ffef9e05f47fc381b4adb716c498106482492e56c1b4370a7"
        sha256 = "9046b2e6ce92647474048c30439ab21ee69a46f6067dbaff67de729644120fad"

    strings:
        $a = "Remcos_Mutex_Inj"
        $b1 = "Uploading file to C&C: "
        $b2 = "Unable to delete: "
        $b3 = "Unable to rename file!"
        $b4 = "Browsing directory: "
        $b5 = "Offline Keylogger Started"
        $b6 = "Online Keylogger Started"
        $b7 = "[Chrome StoredLogins found, cleared!]"
        $b8 = "[Firefox StoredLogins cleared!]"
        $b9 = "Cleared all browser cookies, logins and passwords."
        $b10 = "[Following text has been pasted from clipboard:]"
        $b11 = "[End of clipboard text]"
        $b12 = "OpenCamera"
        $b13 = "CloseCamera"

    condition:
        uint16(0) == 0x5a4d and
        $a and
        10 of ($b*)
}

////////////////////////////////////////////////////////

////////////////////////////////////////////////////////
// YARA ruleset: malware_windows_remcos_rat.yara
// license: Apache License 2.0
// repository: airbnb/binaryalert
// url: https://github.com/airbnb/binaryalert/blob/a9c0f06affc35e1f8e45bb77f835b92350c68a0b/rules/public/malware/windows/malware_windows_remcos_rat.yara

// original YARA name: malware_windows_remcos_rat
private rule Remcos7 {
    meta:
        description = "https://blog.fortinet.com/2017/02/14/remcos-a-new-rat-in-the-wild-2"
        reference = "https://breaking-security.net/remcos/remcos-changelog/"
        author = "@mimeframe"
        md5 = "c8dafe143fe1d81ae6a3c0cd4724b272"
    strings:
        $a1 = "[Following text has been pasted from clipboard:]" wide ascii
        $a2 = "[Chrome StoredLogins found, cleared!]" wide ascii
        $a3 = "[Firefox StoredLogins cleared!]" wide ascii
        $b1 = "getclipboard" wide ascii
        $b2 = "stopmiccapture" wide ascii
        $b3 = "downloadfromurltofile" wide ascii
        $b4 = "getcamsingleframe" wide ascii
        $c1 = "Breaking-Security.Net" wide ascii
        $c2 = "REMCOS v" wide ascii
    condition:
        any of ($a*) or 3 of ($b*) or all of ($c*)
}

////////////////////////////////////////////////////////

////////////////////////////////////////////////////////
// YARA ruleset: win_remcos_rat_unpacked_aug_2023.yar
// repository: embee-research/Yara-detection-rules
// url: https://github.com/embee-research/Yara-detection-rules/blob/ac56d6f6fd2a30c8cb6e5c0455d6519210a8b0f4/Rules/win_remcos_rat_unpacked_aug_2023.yar


// original YARA name: win_remcos_rat_unpacked
private rule Remcos8 {
	meta:
		author = "Matthew @ Embee_Research"
		created = "2023/08/27"
		description = "Detects strings present in remcos rat Samples."
		sha_256 = "ec901217558e77f2f449031a6a1190b1e99b30fa1bb8d8dabc3a99bc69833784"
		
	strings:
		$r0 = " ______                              " ascii
		$r1 = "(_____ \\                             " ascii
		$r2 = " _____) )_____ ____   ____ ___   ___ " ascii 
		$r3 = "|  __  /| ___ |    \\ / ___) _ \\ /___)" ascii
		$r4 = "| |  \\ \\| ____| | | ( (__| |_| |___ |" ascii
		$r5 = "|_|   |_|_____)_|_|_|\\____)___/(___/ " ascii
		
		$s1 = "Watchdog module activated" ascii
		$s2 = "Remcos restarted by watchdog!" ascii
		$s3 = " BreakingSecurity.net" ascii

	condition:
		//uint16(0) == 0x5a4d 
		//and
		(
			(all of ($r*)) or (all of ($s*))
		)
	
	
		

}
////////////////////////////////////////////////////////









////////////////////////////////////////////////////////
// YARA ruleset: remcos.yar
// license: Other
// repository: pmelson/narc
// url: https://github.com/pmelson/narc/blob/845dbeb9f8fcdb18b953840656954e06a596165a/bamfdetect/BAMF_Detect/modules/yara/remcos.yar

// original YARA name: remcos
private rule Remcos9 {
  strings:
    $cfg = "SETTINGS" wide
    $remcos0 = "Remcos_Mutex_Inj"
    $remcos1 = " * REMCOS v"
    $remcos2 = " * Breaking-Security.Net"
    $remcos3 = "Initializing connection to C&C..."
    $func0 = "initremscript"
    $func1 = "remscripterr"
    $func2 = "remscriptexecd"
    $func3 = "remscriptsuccess"
  condition:
    uint16(0) == 0x5a4d and $cfg and (any of ($remcos*) or all of ($func*))
}

////////////////////////////////////////////////////////



rule fsRemcos {
    meta:
        description = "FsYARA - Malware Trends"
        vetted_family = "remcos"
	condition:
		Remcos0 or Remcos1 or Remcos2 or Remcos3 or Remcos4 or Remcos5 or Remcos6 or Remcos7 or Remcos8 or Remcos9
}