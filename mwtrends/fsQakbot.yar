private rule QakBot5
{
	meta:
		author = "kevoreilly, enzok"
		description = "QakBot v5 Payload"
		cape_type = "QakBot Payload"
		packed = "f4bb0089dcf3629b1570fda839ef2f06c29cbf846c5134755d22d419015c8bd2"
		hash = "59559e97962e40a15adb2237c4d01cfead03623aff1725616caeaa5a8d273a35"
		ruleset = "QakBot.yar"
		repository = "kevoreilly/CAPEv2"
		source_url = "https://github.com/kevoreilly/CAPEv2/blob/9c8d6da44b595f8140a5cd76edd8101f6812c3b0/data/yara/CAPE/QakBot.yar"
		license = "Other"

	strings:
		$loop = {8B 75 ?? 48 8B 4C [2] FF 15 [4] 48 8B 4C [2] 48 8B 01 FF 50 ?? 8B DE 48 8B 4C [2] 48 85 C9 0F 85 [4] EB 4E}
		$c2list = {0F B7 1D [4] B? [2] 00 00 E8 [4] 8B D3 4? 89 45 ?? 4? 33 C9 4? 8D 0D [4] 4? 8B C0 4? 8B F8 E8}
		$campaign = {0F B7 1D [4] B? [2] 00 00 E8 [4] 8B D3 4? 89 44 24 ?? 4? 33 C9 4? 8D 0D [4] 4? 8B C0 4? 8B F8 E8}

	condition:
		uint16(0)==0x5A4D and 2 of them
}

private rule QakBot4
{
	meta:
		author = "kevoreilly"
		description = "QakBot v4 Payload"
		cape_type = "QakBot Payload"
		ruleset = "QakBot.yar"
		repository = "kevoreilly/CAPEv2"
		source_url = "https://github.com/kevoreilly/CAPEv2/blob/9c8d6da44b595f8140a5cd76edd8101f6812c3b0/data/yara/CAPE/QakBot.yar"
		license = "Other"

	strings:
		$crypto1 = {8B 5D 08 0F B6 C2 8A 16 0F B6 1C 18 88 55 13 0F B6 D2 03 CB 03 CA 81 E1 FF 00 00 80 79 08 49 81 C9 00 FF FF FF 41}
		$sha1_1 = {5? 33 F? [0-9] 89 7? 24 ?? 89 7? 24 ?? 8? [1-3] 24 [1-4] C7 44 24 ?0 01 23 45 67 C7 44 24 ?4 89 AB CD EF C7 44 24 ?8 FE DC BA 98 C7 44 24 ?C 76 54 32 10 C7 44 24 ?0 F0 E1 D2 C3}
		$sha1_2 = {33 C0 C7 01 01 23 45 67 89 41 14 89 41 18 89 41 5C C7 41 04 89 AB CD EF C7 41 08 FE DC BA 98 C7 41 0C 76 54 32 10 C7 41 10 F0 E1 D2 C3 89 41 60 89 41 64 C3}
		$anti_sandbox1 = {8D 4? FC [0-1] E8 [4-7] E8 [4] 85 C0 7E (04|07) [4-7] 33 (C0|D2) 74 02 EB FA}
		$anti_sandbox2 = {8D 45 ?? 50 E8 [2] 00 00 59 68 [4] FF 15 [4] 89 45 ?? 83 7D ?? 0F 76 0C}
		$decrypt_config1 = {FF 37 83 C3 EC 53 8B 5D 0C 8D 43 14 50 6A 14 53 E8 ?? ?? ?? ?? 83 C4 14 85 C0 ?? 26 ?? ?? 86 20 02 00 00 66 85 C0 ?? ?? FF 37 FF 75 10 53}
		$decrypt_config2 = {8B 45 08 8B 88 24 04 00 00 51 8B 55 10 83 EA 14 52 8B 45 0C 83 C0 14 50 6A 14 8B 4D 0C 51 E8 6C 08 00 00}
		$decrypt_config3 = {6A 13 8B CE 8B C3 5A 8A 18 3A 19 75 05 40 41 4A 75 F5 0F B6 00 0F B6 09 2B C1 74 05 83 C8 FF EB 0E}
		$call_decrypt = {83 7D ?? 00 56 74 0B FF 75 10 8B F3 E8 [4] 59 8B 45 0C 83 F8 28 72 19 8B 55 08 8B 37 8D 48 EC 6A 14 8D 42 14 52 E8}

	condition:
		uint16(0)==0x5A4D and any of ($*)
}

////////////////////////////////////////////////////////

private rule QakBot_OneNote_Loader
{
	meta:
		author = "Ankit Anubhav - ankitanubhav.info"
		description = "Detects a OneNote malicious loader mostly used by QBot (TA570/TA577)"
		date = "2023-02-04"
		yarahub_author_twitter = "@ankit_anubhav"
		yarahub_author_email = "ankit.yara@inbox.ru"
		yarahub_reference_link = "https://twitter.com/ankit_anubhav"
		yarahub_reference_md5 = "b6c8d82a4ec67398c756fc1f36e32511"
		yarahub_uuid = "cbbe7ec6-1658-4f4b-b229-8ade27bff9f4"
		yarahub_license = "CC0 1.0"
		yarahub_rule_matching_tlp = "TLP:WHITE"
		yarahub_rule_sharing_tlp = "TLP:WHITE"
		malpedia_family = "win.qakbot"
		ruleset = "QakBot_OneNote_Loader.yara"
		repository = "CYB3RMX/Qu1cksc0pe"
		source_url = "https://github.com/CYB3RMX/Qu1cksc0pe/blob/8d74a4116951b46b9284102850f28f1082c17c04/Systems/Multiple/YaraRules_Multiple/QakBot_OneNote_Loader.yara"
		license = "GNU General Public License v3.0"

	strings:
		$x = { E4 52 5C 7B 8C D8 A7 4D AE B1 53 78 D0 29 96 D3 }
		$a = "javascript" nocase
		$b = "vbscript" nocase
		$c = "regread" nocase
		$d = "regwrite" nocase
		$e = "RegDelete" nocase
		$f = ".cmd&&start /min" nocase
		$f2 = "&&cmd /c start /min" nocase
		$g = "powershell" nocase
		$tok1 = "rundll32 C:\\ProgramData\\" nocase
		$h = "set"
		$i = "start /min"

	condition:
		$x and ((3 of ($a,$b,$c,$d,$e)) or (($f or $f2) and $g) or $tok1 or (#h>15 and $i))
}

////////////////////////////////////////////////////////

private rule win_qakbot_auto
{
	meta:
		author = "Felix Bilstein - yara-signator at cocacoding dot com"
		date = "2023-12-06"
		version = "1"
		description = "Detects win.qakbot."
		info = "autogenerated rule brought to you by yara-signator"
		tool = "yara-signator v0.6.0"
		signator_config = "callsandjumps;datarefs;binvalue"
		malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot"
		malpedia_rule_date = "20231130"
		malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
		malpedia_version = "20230808"
		malpedia_license = "CC BY-SA 4.0"
		malpedia_sharing = "TLP:WHITE"
		ruleset = "win.qakbot_auto.yar"
		repository = "malpedia/signator-rules"
		source_url = "https://github.com/malpedia/signator-rules/blob/fbacfc09b84d53d410385e66a8e56f25016c588a/rules/win.qakbot_auto.yar"

	strings:
		$sequence_0 = { c9 c3 55 8bec 81ecc4090000 }
		$sequence_1 = { 33c0 7402 ebfa e8???????? }
		$sequence_2 = { 7402 ebfa 33c0 7402 }
		$sequence_3 = { 7402 ebfa eb06 33c0 }
		$sequence_4 = { e8???????? 33c9 85c0 0f9fc1 41 }
		$sequence_5 = { 50 e8???????? 8b06 47 59 }
		$sequence_6 = { 8d45fc 6aff 50 e8???????? }
		$sequence_7 = { 59 59 33c0 7402 }
		$sequence_8 = { e8???????? 59 59 6afb e9???????? }
		$sequence_9 = { 740d 8d45fc 6a00 50 }
		$sequence_10 = { 50 8d8534f6ffff 6a00 50 e8???????? }
		$sequence_11 = { 8945fc e8???????? 8bf0 8d45fc 50 e8???????? }
		$sequence_12 = { 33c0 e9???????? 33c0 7402 }
		$sequence_13 = { 7402 ebfa e9???????? 6a00 }
		$sequence_14 = { 8975f8 8975f0 8975f4 e8???????? }
		$sequence_15 = { eb0b c644301c00 ff465c 8b465c 83f840 7cf0 }
		$sequence_16 = { 7cef eb10 c644301c00 ff465c 8b465c 83f838 }
		$sequence_17 = { e8???????? 83c410 33c0 7402 }
		$sequence_18 = { 85c0 750a 33c0 7402 }
		$sequence_19 = { c644061c00 ff465c 837e5c38 7cef eb10 c644301c00 }
		$sequence_20 = { 7507 c7466401000000 83f840 7507 }
		$sequence_21 = { 837dfc00 750b 33c0 7402 }
		$sequence_22 = { e8???????? e8???????? 33c0 7402 }
		$sequence_23 = { 833d????????00 7508 33c0 7402 }
		$sequence_24 = { c7466001000000 33c0 40 5e }
		$sequence_25 = { 7402 ebfa 837d1000 7408 }
		$sequence_26 = { 80ea80 8855f0 e8???????? 0fb64df7 }
		$sequence_27 = { 50 8d45d8 50 8d45d4 50 8d45ec }
		$sequence_28 = { 56 e8???????? 8b45fc 83c40c 40 }
		$sequence_29 = { 6a00 6800600900 6a00 ff15???????? }
		$sequence_30 = { 50 ff5508 8bf0 59 }
		$sequence_31 = { 6a00 58 0f95c0 40 50 }
		$sequence_32 = { 57 ff15???????? 33c0 85f6 0f94c0 }
		$sequence_33 = { 750c 57 ff15???????? 6afe 58 }
		$sequence_34 = { c3 33c9 3d80000000 0f94c1 }
		$sequence_35 = { 6a02 ff15???????? 8bf8 83c8ff }
		$sequence_36 = { 50 e8???????? 6a40 8d4590 }
		$sequence_37 = { 8d85e4fcffff 50 8d85e4fdffff 50 }
		$sequence_38 = { 56 e8???????? 83c40c 8d4514 50 }
		$sequence_39 = { e8???????? 6a00 8d45d4 50 68???????? }
		$sequence_40 = { 5d c3 33c9 66890c46 }
		$sequence_41 = { 8b4a04 83c204 03f0 85c9 75e1 }
		$sequence_42 = { 01f1 898424a8000000 899424ac000000 8d8424b4000000 89c2 8db424c4000000 }
		$sequence_43 = { 8a442417 8b4c2410 0485 88440c66 89ca 83c201 }
		$sequence_44 = { ffd3 85ff 741b 6808020000 6a00 }
		$sequence_45 = { 88442401 894c245c 0f847afdffff e9???????? }
		$sequence_46 = { 89442410 884c2417 eb94 55 89e5 31c0 }
		$sequence_47 = { 8945fc 8b4518 53 8b5d10 56 8945c4 }
		$sequence_48 = { 8b742420 81c638a1e7c3 39f0 89442410 894c240c 89542408 7408 }
		$sequence_49 = { 8b74242c bb3c13b648 f7e3 69f63c13b648 01f2 89442428 8954242c }
		$sequence_50 = { 8b4c2444 ffd1 83ec08 b901000000 ba66000000 31ff 89c3 }
		$sequence_51 = { 89e0 89580c bb04000000 895808 8b5c246c 895804 8b9c2480000000 }
		$sequence_52 = { 8bf0 83c40c 85f6 0f84f8000000 a1???????? }

	condition:
		7 of them and filesize <4883456
}

////////////////////////////////////////////////////////

private rule win_qakbot_api_hashing_oct_2022
{
	meta:
		author = "@Embee_Research"
		vendor = "Huntress Labs"
		created = "2022/11/14"
		updated = "2022/12/01"
		reference = "@Embee_Research @HuntressLabs"
		reference = "https://twitter.com/embee_research/status/1592067841154756610"
		ruleset = "win_qakbot_api_hashing_oct_2022.yar"
		repository = "embee-research/Yara-detection-rules"
		source_url = "https://github.com/embee-research/Yara-detection-rules/blob/ac56d6f6fd2a30c8cb6e5c0455d6519210a8b0f4/Rules/2022/win_qakbot_api_hashing_oct_2022.yar"

	strings:
		$qakbot_hashing = {0f b6 04 39 33 f0 8b c6 c1 ee 04 83 e0 0f 33 34 85 ?? ?? ?? ?? 8b c6 c1 ee 04 83 e0 0f 33 34 85 ?? ?? ?? ?? 41 3b ca}

	condition:
		any of them
}

////////////////////////////////////////////////////////


private rule QakBot
{
	meta:
		author = "kevoreilly"
		description = "QakBot Payload"
		cape_type = "QakBot Payload"
		ruleset = "QakBot.yar"
		repository = "ctxis/CAPE"
		source_url = "https://github.com/ctxis/CAPE/blob/dae9fa6a254ecdbabeb7eb0d2389fa63722c1e82/data/yara/CAPE/QakBot.yar"

	strings:
		$crypto = {8B 5D 08 0F B6 C2 8A 16 0F B6 1C 18 88 55 13 0F B6 D2 03 CB 03 CA 81 E1 FF 00 00 80 79 08 49 81 C9 00 FF FF FF 41}
		$anti_sandbox = {8D 4D FC 51 E8 ?? ?? ?? ?? 83 C4 04 E8 ?? ?? ?? ?? 85 C0 7E 07 C7 45 F8 00 00 00 00 33 D2 74 02 EB FA 8B 45 F8 EB 08 33 C0 74 02 EB FA 33 C0 8B E5 5D C3}
		$decrypt_config1 = {FF 37 83 C3 EC 53 8B 5D 0C 8D 43 14 50 6A 14 53 E8 ?? ?? ?? ?? 83 C4 14 85 C0 ?? 26 ?? ?? 86 20 02 00 00 66 85 C0 ?? ?? FF 37 FF 75 10 53}
		$decrypt_config2 = {8B 45 08 8B 88 24 04 00 00 51 8B 55 10 83 EA 14 52 8B 45 0C 83 C0 14 50 6A 14 8B 4D 0C 51 E8 6C 08 00 00}

	condition:
		uint16(0)==0x5A4D and any of ($*)
}

////////////////////////////////////////////////////////

private rule malware_QakBot
{
	meta:
		description = "detect QakBot(a.k.a. Qbot, Quakbot, Pinkslipbot) in memory"
		author = "JPCERT/CC Incident Response Group"
		rule_usage = "memory scan"
		hash1 = "d766cd76c93dcc47d0d02e073216d792d1b377e31a4bae74969ab8076e286db3"
		hash2 = "717298e663d574444b63bb152063795326ac7c04edc9873a4ac2e407e1f550a1"
		ruleset = "qbot.yara"
		repository = "JPCERTCC/jpcert-yara"
		source_url = "https://github.com/JPCERTCC/jpcert-yara/blob/0722a9365ec6bc969c517c623cd166743d1bc473/other/qbot.yara"
		license = "Other"

	strings:
		$cryptFunc1 = { 33 D2 6A ?? 5B F7 F3 }
		$cryptFunc2 = { 32 04 37 }
		$hashFunc = { 64 10 B7 1D C8 20 6E 3B AC 30 D9 26  90 41 DC 76 F4 51 6B 6B}

	condition:
		uint16(0)==0x5A4D and uint32( uint32(0x3c))==0x00004550 and $cryptFunc1 and $cryptFunc2 and $hashFunc
}

////////////////////////////////////////////////////////

rule fsQakbot {
	meta:
		description = "FsYARA - Malware Trends"
		vetted_family = "qakbot"
	condition:
		QakBot5 or QakBot4 or QakBot_OneNote_Loader or win_qakbot_auto or win_qakbot_api_hashing_oct_2022 or QakBot or malware_QakBot
}